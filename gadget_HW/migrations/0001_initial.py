# Generated by Django 2.0.2 on 2018-05-29 10:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arduino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase1', models.IntegerField(blank=True, db_column='phase_1', default=None, null=True)),
                ('phase2', models.IntegerField(blank=True, db_column='phase_2', default=None, null=True)),
                ('phase3', models.IntegerField(blank=True, db_column='phase_3', default=None, null=True)),
                ('phase4', models.IntegerField(blank=True, db_column='phase_4', default=None, null=True)),
                ('oilLevel', models.IntegerField(blank=True, db_column='oil_level', default=None, null=True)),
                ('temperature', models.IntegerField(blank=True, db_column='temp', default=None, null=True)),
                ('door', models.BooleanField(db_column='door')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gadget_HW',
            fields=[
                ('id_HW', models.IntegerField(db_column='idGadget', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='PIB', max_length=70)),
                ('adress', models.CharField(db_column='Adress', max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kvarh_p', models.FloatField(blank=True, db_column='kVArh_p', null=True)),
                ('kvarh_n', models.FloatField(blank=True, db_column='kVArh_n', null=True)),
                ('kvah', models.FloatField(blank=True, db_column='kVAh', null=True)),
                ('cur_sum_kw', models.FloatField(blank=True, db_column='cur_sum_kW', null=True)),
                ('cur_l1_kw', models.FloatField(blank=True, db_column='cur_L1_kW', null=True)),
                ('cur_l2_kw', models.FloatField(blank=True, db_column='cur_L2_kW', null=True)),
                ('cur_l3_kw', models.FloatField(blank=True, db_column='cur_L3_kW', null=True)),
                ('cur_sum_kvar_p', models.FloatField(blank=True, db_column='cur_sum_kVAr_p', null=True)),
                ('cur_l1_kvar_p', models.FloatField(blank=True, db_column='cur_L1_kVAr_p', null=True)),
                ('cur_l2_kvar_p', models.FloatField(blank=True, db_column='cur_L2_kVAr_p', null=True)),
                ('cur_l3_kvar_p', models.FloatField(blank=True, db_column='cur_L3_kVAr_p', null=True)),
                ('cur_sum_kvar_n', models.FloatField(blank=True, db_column='cur_sum_kVAr_n', null=True)),
                ('cur_l1_kvar_n', models.FloatField(blank=True, db_column='cur_L1_kVAr_n', null=True)),
                ('cur_l2_kvar_n', models.FloatField(blank=True, db_column='cur_L2_kVAr_n', null=True)),
                ('cur_l3_kvar_n', models.FloatField(blank=True, db_column='cur_L3_kVAr_n', null=True)),
                ('cur_sum_kva', models.FloatField(blank=True, db_column='cur_sum_kVA', null=True)),
                ('cur_l1_kva', models.FloatField(blank=True, db_column='cur_L1_kVA', null=True)),
                ('cur_l2_kva', models.FloatField(blank=True, db_column='cur_L2_kVA', null=True)),
                ('cur_l3_kva', models.FloatField(blank=True, db_column='cur_L3_kVA', null=True)),
                ('cur_sum_a', models.FloatField(blank=True, db_column='cur_sum_A', null=True)),
                ('cur_l1_a', models.FloatField(blank=True, db_column='cur_L1_A', null=True)),
                ('cur_l2_a', models.FloatField(blank=True, db_column='cur_L2_A', null=True)),
                ('cur_l3_a', models.FloatField(blank=True, db_column='cur_L3_A', null=True)),
                ('cur_sum_v', models.FloatField(blank=True, db_column='cur_sum_V', null=True)),
                ('cur_l1_v', models.FloatField(blank=True, db_column='cur_L1_V', null=True)),
                ('cur_l2_v', models.FloatField(blank=True, db_column='cur_L2_V', null=True)),
                ('cur_l3_v', models.FloatField(blank=True, db_column='cur_L3_V', null=True)),
                ('cur_f', models.FloatField(blank=True, db_column='cur_F', null=True)),
                ('gadget_HW', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='gadget_HW.Gadget_HW')),
            ],
        ),
        migrations.AddField(
            model_name='arduino',
            name='gadget_HW',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='gadget_HW.Gadget_HW'),
        ),
    ]
